[
  {
    "id": 1,
    "name": "Fitify - Fitness Tracker",
    "image": "final-fitify.png",
    "description": "A full-featured fitness tracker web app supporting Member, Trainer, and Admin dashboards with booking, payments, and progress tracking.",
    "techStack": {
      "frontend": [
        "React.js",
        "Tailwind CSS",
        "DaisyUI",
        "React Router",
        "TanStack Query",
        "Axios",
        "SweetAlert2",
        "Stripe.js",
        "Firebase",
        "dotenv",
        "react-helmet-async",
        "react-hot-toast",
        "react-select",
        "react-hook-form",
        "Recharts",
        "react-slick",
        "slick-carousel",
        "react-responsive-carousel",
        "Google Font (Outfit)"
      ],
      "backend": ["Node.js", "Express.js", "MongoDB", "JWT"],
      "deployment": ["Firebase Hosting"]
    },
    "liveLink": "https://fitify-5fe13.web.app/",
    "githubLink": "https://github.com/questcoderull",
    "challenges": "The biggest challenge was implementing role-based authentication for three different dashboards — Member, Trainer, and Admin. It was my first experience creating a dashboard system and integrating secure payments with Stripe. I had to manage multiple permissions, ensure a smooth user experience, and install many different npm packages to make the features work together seamlessly.",
    "futurePlans": "Add AI-based workout recommendations, enable real-time chat between trainers and members, and integrate wearable device tracking."
  },
  {
    "id": 2,
    "name": "Readly - Blogging Platform",
    "image": "/readly-dark-long.png",
    "description": "Readly is a simple yet powerful blogging platform where users can write blogs, explore content, save to wishlist, and comment on posts.",
    "techStack": {
      "frontend": [
        "React.js",
        "Tailwind CSS",
        "DaisyUI",
        "React Router",
        "Firebase",
        "react-typo-animation",
        "framer-motion",
        "react-hot-toast",
        "Google Font (Outfit)",
        "lottie-react",
        "react-tooltip",
        "react-awesome-reveal",
        "react-fast-marquee"
      ],
      "backend": [],
      "deployment": ["Firebase Hosting"]
    },
    "liveLink": "https://readly-8b506.web.app/",
    "githubLink": "https://github.com/questcoderull",
    "challenges": "Implementing the wishlist feature with Firebase and real-time comments across multiple users was a complex task. It was also my first time working with Lottie animations, which made the project feel more dynamic. One of the trickiest parts was changing the fill color for wishlisted blogs in real-time, as well as implementing both light and dark mode using DaisyUI themes — a feature that took hours of experimentation before I finally nailed it.",
    "futurePlans": "Add user profile pages with bio and social links, introduce blog categories, and enable collaborative blog editing."
  },
  {
    "id": 3,
    "name": "Find My Hoomie - Room Booking Platform",
    "image": "/findmyhoomio-long.png",
    "description": "A full-stack room listing and booking platform where users can browse rooms, book them, and manage their own listings. Features user authentication, room management, and dynamic UI animations.",
    "techStack": {
      "frontend": [
        "React.js",
        "Tailwind CSS",
        "Daisy UI",
        "React Router",
        "Firebase Authentication",
        "React Awesome Reveal",
        "React Tooltip",
        "React Icons",
        "Swiper.js",
        "Vite",
        ".env.local"
      ],
      "backend": [
        "Node.js",
        "Express.js",
        "MongoDB Atlas",
        "MongoDB Native Driver",
        "CORS",
        "dotenv"
      ],
      "deployment": ["Firebase Hosting", "Vercel"]
    },
    "liveLink": "https://find-my-hoomie.web.app/",
    "githubLink": "https://github.com/questcoderull",
    "challenges": "Building a booking platform meant handling real-time updates, like live like counts for each room, while keeping the UI smooth and visually appealing. Integrating image sliders for multiple listings and managing Firebase authentication for user logins was a tough balancing act. At the time, working with the MyListing feature set was especially challenging and taught me a lot about organizing complex UI states.",
    "futurePlans": "Implement a booking calendar and allow image uploads for room listings."
  },
  {
    "id": 4,
    "name": "AppForest - App Showcase Platform",
    "image": "/appForest-long.png",
    "description": "A beautiful web app built with React, Tailwind CSS, DaisyUI, and Toastify to showcase apps with detailed information, ratings, and reviews, including login/logout and update system.",
    "techStack": {
      "frontend": [
        "React.js",
        "Tailwind CSS",
        "DaisyUI",
        "React Router",
        "react-toastify",
        "sweetalert2",
        "react-helmet-async",
        "react-icons"
      ],
      "backend": ["Firebase Authentication", "JSON Fake App Data"],
      "deployment": ["Netlify"]
    },
    "liveLink": "https://appforest-live-link.com",
    "githubLink": "https://github.com/questcoderull",
    "challenges": "The main challenges were implementing secure login/logout, protecting routes, and designing a smooth app installation process. Managing dynamic user reviews in real-time while keeping the UI fast and interactive required careful planning and optimization.",
    "futurePlans": "Add more app categories, real-time reviews and ratings, and improve performance and animations."
  }
]
